<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>fr.msch</groupId>
  <artifactId>wissl</artifactId>
  <version>b10</version>
  <packaging>war</packaging>
  <name>wissl</name>
  <url>http://msch.fr/wissl</url>

  <repositories>
    <repository>
      <!-- for jaudiotagger -->
      <id>maven java net public</id>
      <url>https://maven.java.net/content/repositories/public/</url>
    </repository>
  </repositories>

  <build>
    <plugins>
      <plugin>
        <!-- source compat: java 6 -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
		<version>2.0.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <!-- executable war: Launcher in main-class -->
         <artifactId>maven-war-plugin</artifactId>
		 <version>2.1-beta-1</version>
         <configuration>
           <archive>
             <manifest>
               <mainClass>fr.msch.wissl.launcher.Launcher</mainClass>
             </manifest>
           </archive>
         </configuration>
      </plugin>
      <plugin>
        <!-- executable war: move Launcher.class to war root
             so that the jar classloader finds it -->
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>main-class-placement</id>
            <phase>prepare-package</phase>
            <configuration>
              <tasks>
                <move todir="${project.build.directory}/${project.artifactId}-${project.version}/">
                  <fileset dir="${project.build.directory}/classes/">
                    <include name="fr/msch/wissl/launcher/Launcher*.class" />
                  </fileset>
                </move>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- executable war: unpack jetty to war root
             so that the jar classloader finds it -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <id>jetty-classpath</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>org.eclipse.jetty,javax.servlet</includeGroupIds>
              <excludeArtifactIds>jsp-api,jstl</excludeArtifactIds>
              <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}</outputDirectory>
              <!-- the servlet-api jar is signed, unpacking these files to /META-INF
                   prevents the war to run since the signatures won't match -->
              <excludes>**/ECLIPSEF.RSA,**/ECLIPSEF.SF,**/eclipse.inf</excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

	  <plugin>
		<groupId>org.mortbay.jetty</groupId>
		<artifactId>jetty-maven-plugin</artifactId>
		<version>${jetty.version}</version>
        <configuration>
          <webAppConfig>
            <defaultsDescriptor>jetty-conf.xml</defaultsDescriptor>
          </webAppConfig>
        </configuration>
	  </plugin>

    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>

  <properties>
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyMMddHHmm</maven.build.timestamp.format>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<jetty.version>9.4.41.v20210516</jetty.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
    </dependency>
    <dependency>
      <groupId>c3p0</groupId>
      <artifactId>c3p0</artifactId>
      <version>0.9.1.2</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.3.167</version>
    </dependency>
    <dependency>
      <groupId>net.jthink</groupId>
      <artifactId>jaudiotagger</artifactId>
      <version>2.0.4-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>${jetty.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>2.3.4.Final</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jettison-provider</artifactId>
      <version>2.3.4.Final</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>jaxrs-api</artifactId>
      <version>2.3.4.Final</version>
    </dependency>
   <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-multipart-provider</artifactId>
      <version>2.3.4.Final</version>
   </dependency>
  </dependencies>
</project>
